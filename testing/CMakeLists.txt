cmake_minimum_required(VERSION 3.0)
project(testing)
enable_testing()

set(OUTPUT             			"build")
file(MAKE_DIRECTORY 			${OUTPUT})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY 	${OUTPUT})
set(SOURCES	 			"/tests_c")
set(TEST_LINK_FILES			"../src/lib.cpp")
set(COMPILE_FLAGS      			"-O2 -g --coverage")
set(CMAKE_C_COMPILER 			"arm-linux-gnueabi-gcc")
set(CMAKE_CXX_COMPILER 			"arm-linux-gnueabi-g++")
set(QEMU_SETTINGS			"-L" "$LINARO_SYSROOT")
set(CMAKE_EXE_LINKER_FLAGS 		"-lgcov --coverage")
set(CMAKE_CROSSCOMPILING 		TRUE)
add_definitions(${COMPILE_FLAGS})
include_directories(${SOURCES})
include_directories(${PROJECT_SOURCE_DIR})

find_program(QEMU_ARM "qemu-arm")
if(NOT QEMU_ARM)
    message(FATAL_ERROR "qemu-arm not found!")
endif()

add_executable("test1"		"tests_c/test1.c"	${TEST_LINK_FILES})
add_executable("test2"		"tests_c/test2.c"	${TEST_LINK_FILES})
add_executable("test3"		"tests_c/test3.c"	${TEST_LINK_FILES})
add_executable("test4"		"tests_c/test4.c"	${TEST_LINK_FILES})
add_executable("test5"		"tests_c/test5.c"	${TEST_LINK_FILES})
add_executable("test6"		"tests_c/test6.c"	${TEST_LINK_FILES})
add_executable("test7"		"tests_c/test7.c"	${TEST_LINK_FILES})

add_custom_target("test_num_1" ALL ${QEMU_ARM} ${QEMU_SETTINGS} "./build/test1" DEPENDS "test1")
add_custom_target("test_num_2" ALL ${QEMU_ARM} ${QEMU_SETTINGS} "./build/test2" DEPENDS "test2")
add_custom_target("test_num_3" ALL ${QEMU_ARM} ${QEMU_SETTINGS} "./build/test3" DEPENDS "test3")
add_custom_target("test_num_4" ALL ${QEMU_ARM} ${QEMU_SETTINGS} "./build/test4" DEPENDS "test4")
add_custom_target("test_num_5" ALL ${QEMU_ARM} ${QEMU_SETTINGS} "./build/test5" DEPENDS "test5")
add_custom_target("test_num_6" ALL ${QEMU_ARM} ${QEMU_SETTINGS} "./build/test6" DEPENDS "test6")
add_custom_target("test_num_7" ALL ${QEMU_ARM} ${QEMU_SETTINGS} "./build/test7" DEPENDS "test7")

